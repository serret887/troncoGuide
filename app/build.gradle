apply plugin: 'com.android.application'
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
//for unit test
    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res/layouts/Activities/LoginActivity',
                    'src/main/res/layouts/Activities/DetailFullScreenActivity',
                    'src/main/res/layouts/Activities/MainActivity',
                    'src/main/res/layouts/Fragments/mostPopularFragment',
                    'src/main/res/layouts/Fragments/newsFragment',
                    'src/main/res/layouts/Activities',
                    'src/main/res/layouts/Fragments',
                    'src/main/res/layouts',
                    'src/main/res'
            ]
        }
//        testCompile{
//            assets.include('src/test/assets')
//        }
        androidTest{
            assets.include('src/androidTest/assets')
        }
    }
    defaultConfig {
        applicationId "com.troncoguide.androidapp.troncoguide"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
//test runner for espresso
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        paid {
            applicationId = "com.troncoguide.androidapp.troncoguide.pro"

        }

        free {
            applicationId = "com.troncoguide.androidapp.troncoguide.free"

        }
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //dagger2
    provided 'com.google.dagger:dagger-compiler:2.0.2'
    compile 'javax.inject:javax.inject:1'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'com.google.dagger:dagger:2.0.2'
    //adding espresso to gradle
    androidTestCompile 'com.android.support:support-annotations:23.1.1'
    //this is for an error

    ///////////////////////////////////////////////////////

    // Espresso core
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    // Android JUnit Runner
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    // JUnit4 Rules
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    // Espresso-contrib for DatePicker, RecyclerView, Drawer actions, Accessibility checks, CountingIdlingResource
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    // include espresso-intents
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2'
    //////////////////////////////////////////////////////////////

    //recycleView
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
//slider image
//
        compile 'com.squareup.picasso:picasso:2.3.2'
        compile 'com.nineoldandroids:library:2.4.0'
        compile 'com.daimajia.slider:library:1.1.5'
//button
    compile 'com.oguzdev:CircularFloatingActionMenu:1.0.2'
    //volley
    compile 'com.mcxiaoke.volley:library:1.0.1'
    //gson parsing library
    compile 'com.google.code.gson:gson:2.4'
    //moquito
    testCompile 'org.powermock:powermock-mockito-release-full:1.6.1'
    testCompile 'org.apache.httpcomponents:httpclient:4.3.5'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.2'
    //new
    testCompile 'org.powermock:powermock-api-mockito:1.6.2'
    //new
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.2'
    //new
    testCompile('org.powermock:powermock-api-mockito:1.6.2') {
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
    }
    testCompile('org.powermock:powermock-module-junit4:1.6.2') {
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
    }
    //roboelectric
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.robolectric:shadows-support-v4:3.0'
    testCompile 'org.robolectric:shadows-httpclient:3.0'
    // Set this dependency if you want to use Hamcrest matching
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.hamcrest:hamcrest-core:1.1'
    testCompile 'org.hamcrest:hamcrest-integration:1.1'
    //MOck web server
    testCompile 'com.squareup.okhttp:mockwebserver:1.6.0'
    androidTestCompile 'com.squareup.okhttp:mockwebserver:1.6.0'
    compile 'org.robolectric:robolectric-annotations:3.0'
}

///code coverage
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
        '../app/src/main/java'
]

task jacocoTestReport(type:JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                      // '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}